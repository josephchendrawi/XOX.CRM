<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    <link href="~/Content/main.css" type="text/css" rel="stylesheet" />

    <!-- bootstrap 3.0.2 -->
    <link href="~/Content/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <!-- jquery ui-->
    <link href="~/Content/css/jQueryUI/jquery-ui.1.11.2.min.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/css/jQueryUI/jquery-ui.theme.min.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/css/jQueryUI/jquery-ui.structure.min.css" rel="stylesheet" type="text/css" />
    <!-- font Awesome -->
    <link href="~/Content/css/font-awesome.min.css" rel="stylesheet" type="text/css" />
    <!-- Ionicons -->
    <link href="~/Content/css/ionicons.min.css" rel="stylesheet" type="text/css" />
    <!-- fullCalendar -->
    <link href="~/Content/css/fullcalendar/fullcalendar.css" rel="stylesheet" type="text/css" />
    <!-- Daterange picker -->
    <link href="~/Content/css/daterangepicker/daterangepicker-bs3.css" rel="stylesheet" type="text/css" />
    <!-- bootstrap wysihtml5 - text editor -->
    <link href="~/Content/css/bootstrap-wysihtml5/bootstrap3-wysihtml5.min.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/css/chosen/chosen.min.css" rel="stylesheet" type="text/css" />
    <!-- Theme style -->
    <link href="~/Content/css/default.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/css/iCheck/square/blue.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/css/animate.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/js/select2/select2.css" type="text/css" rel="stylesheet" />

    <!-- jQuery 2.0.2 -->
    <script src="~/Content/js/jquery.min.js"></script>
    <!-- Bootstrap -->
    <script src="~/Content/js/bootstrap.min.js" type="text/javascript"></script>
    <script src="~/Content/js/jquery.validate.min.js" type="text/javascript"></script>
    <!-- jQuery UI 1.10.3 -->
    <script src="~/Content/js/jquery-ui.1.11.2.min.js" type="text/javascript"></script>
    <!-- Morris.js charts -->
    <script src="~/Content/js/raphael-min.js"></script>
    <!--<script src="/js/plugins/morris/morris.min.js" type="text/javascript"></script>-->
    <!-- Sparkline -->
    <script src="~/Content/js/plugins/sparkline/jquery.sparkline.min.js" type="text/javascript"></script>
    <!-- fullCalendar -->
    <script src="~/Content/js/plugins/fullcalendar/fullcalendar.min.js" type="text/javascript"></script>
    <!-- jQuery Knob Chart -->
    <script src="~/Content/js/plugins/jqueryKnob/jquery.knob.js" type="text/javascript"></script>
    <script src="~/Content/js/plugins/flot/jquery.flot.js" type="text/javascript"></script>
    <script src="~/Content/js/plugins/flot/jquery.flot.time.js" type="text/javascript"></script>
    <!-- daterangepicker -->
    <script src="~/Content/js/plugins/daterangepicker/daterangepicker.js" type="text/javascript"></script>
    <!-- Bootstrap WYSIHTML5 -->
    <script src="~/Content/js/plugins/bootstrap-wysihtml5/bootstrap3-wysihtml5.all.min.js" type="text/javascript"></script>
    <script src="~/Content/js/plugins/chosen/chosen.jquery.min.js" type="text/javascript"></script>
    <script src="~/Content/js/select2/select2.min.js" type="text/javascript"></script>
    <!-- iCheck -->
    <script src="~/Content/js/plugins/iCheck/icheck.min.js" type="text/javascript"></script>
    <!-- notify -->
    <script src="~/Content/js/plugins/notify/bootstrap-notify.min.js" type="text/javascript"></script>
    <!-- AdminLTE App -->
    <script src="~/Content/js/AdminLTE/dashboard.js" type="text/javascript"></script>
    <!--Impromptu-->
    <link href="~/Content/css/sweetalert/sweet-alert.css" rel="stylesheet" type="text/css" />
    <script src="~/Content/js/plugins/sweetalert/sweet-alert.min.js" type="text/javascript"></script>
    <!-- Scroll To -->
    <script src="~/Content/js/jquery-scrollto.js"></script>
    <!-- site script -->
    <script src="~/Content/js/SiteScript.js" type="text/javascript"></script>
    <script src="~/Content/js/app.min.js" type="text/javascript"></script>
    <script src="~/Content/js/plugins/slimScroll/jquery.slimscroll.min.js" type="text/javascript"></script>

    <script src='~/Content/nprogress/nprogress.js'></script>
    <link rel='stylesheet' href='~/Content/nprogress/nprogress.css' />

    <script src="~/Content/iviewer/jquery.iviewer.min.js"></script>
    <script src="~/Content/iviewer/jquery.mousewheel.min.js"></script>
    <link href="~/Content/iviewer/jquery.iviewer.css" rel="stylesheet">

    <script type="text/javascript">

        function showmore(div_id) {
            $("#" + div_id).slideToggle();
        }

        /*
        jQuery.validator.unobtrusive.adapters.add(
            'requiredif', ['other'], function (options) {

                var getModelPrefix = function (fieldName) {
                    return fieldName.substr(0, fieldName.lastIndexOf('.') + 1);
                }

                var appendModelPrefix = function (value, prefix) {
                    if (value.indexOf('*.') === 0) {
                        value = value.replace('*.', prefix);
                    }
                    return value;
                }

                var prefix = getModelPrefix(options.element.name),
                    other = options.params.other,
                    fullOtherName = appendModelPrefix(other, prefix),
                    element = $(options.form).find(':input[name="' + fullOtherName + '"]')[0];

                options.rules['requiredif'] = element;
                if (options.message) {
                    options.messages['requiredif'] = options.message;
                }
            }
        );

        jQuery.validator.addMethod('requiredif', function (value, element, params) {
            var otherValue = $(params).val();
            if (otherValue != null && otherValue != '') {
                return true;
            }
            return value != null && value != '';
        }, '');
        */

        //tooltip for validation
        $(function () {
            //NProgress
            // Show the progress bar 
            NProgress.start();

            // Increase randomly
            var interval = setInterval(function () { NProgress.inc(); }, 1000);

            // Trigger finish when page fully loaded
            jQuery(window).load(function () {
                clearInterval(interval);
                NProgress.done();
            });

            // Trigger bar when exiting the page
            jQuery(window).unload(function () {
                NProgress.start();
            });

            //init for sidebar toggle

            //initialize
            $("select.chzn").chosen();

            $(document).ready(function () {
                $(".numbers").each(function () {
                    $(this).digits();
                });
            });

            $(".date_dob_txt").datepicker({ dateFormat: 'dd MM yy', yearRange: "-100:+0", changeYear: true });
            $(".date_txt").datepicker({ dateFormat: 'dd MM yy', yearRange: "-50:+0", changeYear: true });

            $('input').iCheck({
                checkboxClass: 'icheckbox_square-blue',
                radioClass: 'iradio_square-blue',
                increaseArea: '20%' // optional
            });

            //auto add asterik to Required field.
            $('input[type=text]').each(function () {
                var req = $(this).attr('data-val-required');
                if (undefined != req) {
                    var label = $('label[for="' + $(this).attr('name').replace('.','_') + '"]');
                    var text = label.text();
                    if (text.length > 0) {
                        label.append('<span style="color:#E42E47"> *</span>');
                    }
                }
            });
            $('input[type=password]').each(function () {
                var req = $(this).attr('data-val-required');
                if (undefined != req) {
                    var label = $('label[for="' + $(this).attr('name').replace('.', '_') + '"]');
                    var text = label.text();
                    if (text.length > 0) {
                        label.append('<span style="color:#E42E47"> *</span>');
                    }
                }
            });
            $('textarea').each(function () {
                var req = $(this).attr('data-val-required');
                if (undefined != req) {
                    var label = $('label[for="' + $(this).attr('name').replace('.', '_') + '"]');
                    var text = label.text();
                    if (text.length > 0) {
                        label.append('<span style="color:#E42E47"> *</span>');
                    }
                }
            });
            $('input[type=radio]').each(function () {
                var req = $(this).attr('data-val-required');
                if (undefined != req) {
                    var label = $('label[for="' + $(this).attr('name').replace('.', '_') + '"]');
                    var text = label.text();
                    if (text.length > 0) {
                        label.append('<span style="color:#E42E47"> *</span>');
                    }
                }
            });
            $('select').each(function () {
                var req = $(this).attr('data-val-required');
                if (undefined != req) {
                    var label = $('label[for="' + $(this).attr('name').replace('.', '_') + '"]');
                    var text = label.text();
                    if (text.length > 0) {
                        label.append('<span style="color:#E42E47"> *</span>');
                    }
                }
            });

            //tooltip for input validation
            $(document).tooltip({
                items: ".input-validation-error",
                content: function () {
                    var validationtxt = $(this).attr('data-val-required');
                    if ($(this).attr('data-val-email') != undefined) {
                        validationtxt = $(this).attr('data-val-email')
                    }
                    if ($(this).attr('data-val-number') != undefined) {
                        validationtxt = $(this).attr('data-val-number')
                    }
                    return validationtxt;
                },
                position: {
                    my: "center bottom-8",
                    at: "center top",
                    using: function (position, feedback) {
                        $(this).css(position);
                        $("<div>")
                            .addClass("arrow")
                            .addClass(feedback.vertical)
                            .addClass(feedback.horizontal)
                            .appendTo(this);
                    }
                }
            });
        });


        //alert override
        window.alert = function (msg) {
            $.notify({
                message: msg
            }, {
                type: 'minimalist',
                placement: {
                    from: "top",
                    align: "center"
                },
                delay: 8000,
                animate: {
                    enter: 'animated fadeInDown',
                    exit: 'animated fadeOutUp'
                },
            });
        }

		//hide setting menu if empty
		$(function () {
			if ($("ul#ul-setting li:not(.clear)").length == 0) {
				$("li#li-setting").hide();
			}
		});

    </script>

    @Scripts.Render("~/bundles/jqueryval")
    @RenderSection("scripts", false)

    <title>@ViewBag.Title</title>

</head>
<body class="sidebar-mini skin-blue sidebar-collapse" >
    @if (ViewData.ModelState.Any(x => x.Value.Errors.Any()))
    {
        /*override validationsummary with alert
            <div class="alert alert-error">
                <a class="close" data-dismiss="alert">&times;</a>
            @Html.ValidationSummary(true, "Errors: ")
            </div>*/
        <script type="text/javascript">
            var errors = @Html.Raw(
                        string.Join(
                            Environment.NewLine,
                            ViewData.ModelState
                                    .Where(x => x.Value.Errors.Count > 0)
                                    .SelectMany(x => x.Value.Errors)
                                    .Select(error => error.ErrorMessage))
                )
            alert(errors);
        </script>
    }
    @if (TempData["Message"] != null)
    {
        <script type="text/javascript">
            alert("@Html.Raw(TempData["Message"])");
        </script>
    }

    <div class="wrapper">
        <header class="main-header">
            <!-- Logo -->
            <a href="@Url.Action("Index","Home")" class="logo text-center">
                <!-- mini logo for sidebar mini 50x50 pixels -->
                <span class="logo-mini"></span>
                <!-- logo for regular state and mobile devices -->
                <span class="logo-lg">Customer Relationship Portal</span>
            </a>
            <!-- Header Navbar: style can be found in header.less -->
            <nav class="navbar navbar-static-top" role="navigation">
                <!-- Sidebar toggle button-->
                @**@
                <a href="#" class="sidebar-toggle" data-toggle="offcanvas" role="button">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </a>
                <div class="navbar-custom-menu">
                    <ul class="nav navbar-nav">

                        <!-- User Account: style can be found in dropdown.less -->
                        <li class="dropdown user user-menu">
                            <a href="#" class="" data-toggle="">
                                <span class="hidden-xs">
                                    @if (Session["UserEmail"] != null)
                                    {
                                        @Session["UserEmail"].ToString();
                                    }
                                </span>
                            </a>

                        </li>
                        <li>
                            <a href="@Url.Action("LogOut","User")">
                                <span class="fa fa-power-off" title="Log Out"></span>
                            </a>
                        </li>
                    </ul>
                </div>
            </nav>
        </header>

        <aside class="main-sidebar">
            <!-- sidebar: style can be found in sidebar.less -->
            <section class="sidebar" style="height: auto;">
                @*<!-- Sidebar user panel -->
                <div class="user-panel">
                </div>
                <!-- search form -->

                <form action="#" method="get" class="sidebar-form">
                    <div class="input-group">
                        <input type="text" name="q" class="form-control" placeholder="Search..." />
                        <span class="input-group-btn">
                            <button type='submit' name='search' id='search-btn' class="btn btn-flat"><i class="fa fa-search"></i></button>
                        </span>
                    </div>
                </form>*@
                <!-- /.search form -->
                <!-- sidebar menu: : style can be found in sidebar.less -->
                <ul class="sidebar-menu">
                    <li class="header">MAIN NAVIGATION</li>

                    <li @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "home" && ViewContext.RouteData.Values["action"].ToString().ToLower() == "index")
                        { @Html.Raw("class='active'")    }>
                        <a href="@Url.Action("Index", "Home")">
                            <i class="fa fa-home"></i> <span>Dashboard</span>
                        </a>
                    </li>

                    @if (XOX.CRM.Lib.UserService.IsAuthorized("ACCOUNT", "VIEW") == true) { 
                    <li @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "account" && ViewContext.RouteData.Values["action"].ToString().ToLower() != "index") { @Html.Raw("class='active treeview'")         } else { @Html.Raw("class='treeview'")         }>
                        <a href="#">
                            <i class="ion ion-android-contacts"></i> <span>Accounts</span><i class="fa fa-angle-left pull-right"></i>
                        </a>
                        <ul class="treeview-menu">
                            <li @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "account" && ViewContext.RouteData.Values["action"].ToString().ToLower() == "search")
                                { @Html.Raw("class='active'")          }>
                                <a href="@Url.Action("Search", "Account")">
                                    <span>Account List</span>
                                </a>
                            </li>
                            @*@if (XOX.CRM.Lib.UserService.IsAuthorized("ACCOUNT", "ADD") == true) {
                            <li @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "account" && ViewContext.RouteData.Values["action"].ToString().ToLower() == "registration")
                                { @Html.Raw("class='active'")           }>
                                <a href="@Url.Action("Registration", "Account")">
                                    <span>Registration</span>
                                </a>
                            </li>
                            }*@
                        </ul>
                    </li>
                    }
    
                    @if (XOX.CRM.Lib.UserService.IsAuthorized("ORDER", "VIEW") == true) {
                        <li @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "order" && ViewContext.RouteData.Values["action"].ToString().ToLower() != "index") { @Html.Raw("class='active treeview'")          } else { @Html.Raw("class='treeview'")          }>
                            <a href="#">
                                <i class="ion ion-clipboard"></i> <span>Orders</span><i class="fa fa-angle-left pull-right"></i>
                            </a>
                            <ul class="treeview-menu">
                                <li @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "order" && ViewContext.RouteData.Values["action"].ToString().ToLower() == "search")
                                    { @Html.Raw("class='active'")           }>
                                    <a href="@Url.Action("Search", "Order")">
                                        <span>Registrations Management</span>
                                    </a>
                                </li>
                                <li @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "order" && ViewContext.RouteData.Values["action"].ToString().ToLower() == "changeplansearch")
                                    { @Html.Raw("class='active'")            }>
                                    <a href="@Url.Action("ChangePlanSearch", "Order")">
                                        <span>Change Plan</span>
                                    </a>
                                </li>
                                <li @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "order" && ViewContext.RouteData.Values["action"].ToString().ToLower() == "terminationsearch") { @Html.Raw("class='active'")             }>
                                    <a href="@Url.Action("TerminationSearch", "Order")">
                                        <span>Termination</span>
                                    </a>
                                </li>

                                @*@if (XOX.CRM.Lib.UserService.IsAuthorized("ASSIGN", "VIEW") == true) {
                                <li @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "order" && ViewContext.RouteData.Values["action"].ToString().ToLower() == "assign") { @Html.Raw("class='active'")            }>
                                    <a href="@Url.Action("Assign", "Order")">
                                        <span>Orders Assign</span>
                                    </a>
                                </li>
                                }*@
                            </ul>
                        </li>
                    }

                    @if (XOX.CRM.Lib.UserService.IsAuthorized("REPORT", "VIEW") == true) {
                        <li @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "report" && ViewContext.RouteData.Values["action"].ToString().ToLower() != "index") { @Html.Raw("class='active treeview'")          } else { @Html.Raw("class='treeview'")          }>
                            <a href="#">
                                <i class="ion ion-document-text"></i> <span>Reports</span><i class="fa fa-angle-left pull-right"></i>
                            </a>
                            <ul class="treeview-menu">
                                <li @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "report" && ViewContext.RouteData.Values["action"].ToString().ToLower() == "paymentsearch")
                                    { @Html.Raw("class='active'")           }>
                                    <a href="@Url.Action("PaymentSearch", "Report")">
                                        <span>Payments</span>
                                    </a>
                                </li>
                                @if (XOX.CRM.Lib.UserService.IsAuthorized("BATCHWORK", "VIEW") == true)
                                {
                                    <li @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "batchwork" && ViewContext.RouteData.Values["action"].ToString().ToLower() == "list") { @Html.Raw("class='active'")    }>
                                        <a href="@Url.Action("List", "BatchWork")">
                                            <span>Batch Works</span>
                                        </a>
                                    </li>
                                }
                                <li @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "report" && ViewContext.RouteData.Values["action"].ToString().ToLower() == "billpayment")
                                    { @Html.Raw("class='active'")           }>
                                    <a href="@Url.Action("BillPayment", "Report")">
                                        <span>Bill Payments</span>
                                    </a>
                                </li>
                                <li @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "report" && ViewContext.RouteData.Values["action"].ToString().ToLower() == "asset") { @Html.Raw("class='active'")            }>
                                    <a href="@Url.Action("Asset", "Report")">
                                        <span>Assets</span>
                                    </a>
                                </li>
                                <li @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "report" && ViewContext.RouteData.Values["action"].ToString().ToLower() == "audittrail") { @Html.Raw("class='active'")             }>
                                    <a href="@Url.Action("AuditTrail", "Report")">
                                        <span>Audit Trails</span>
                                    </a>
                                </li>
                                <li @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "report" && ViewContext.RouteData.Values["action"].ToString().ToLower() == "paymentcarddetails") { @Html.Raw("class='active'")             }>
                                    <a href="@Url.Action("PaymentCardDetails", "Report")">
                                        <span>Payment Card</span>
                                    </a>
                                </li>
                                <li @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "report" && ViewContext.RouteData.Values["action"].ToString().ToLower() == "refund") { @Html.Raw("class='active'")              }>
                                    <a href="@Url.Action("Refund", "Report")">
                                        <span>Refund</span>
                                    </a>
                                </li>
                            </ul>
                        </li>
                    }

                    @if (XOX.CRM.Lib.UserService.IsAuthorized("PRODUCT", "VIEW") == true) {
                        <li @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "product" && ViewContext.RouteData.Values["action"].ToString().ToLower() != "index") { @Html.Raw("class='active treeview'")          } else { @Html.Raw("class='treeview'")          }>
                            <a href="#">
                                <i class="ion ion-filing"></i> <span>Products</span><i class="fa fa-angle-left pull-right"></i>
                            </a>
                            <ul class="treeview-menu">
                                <li @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "product" && ViewContext.RouteData.Values["action"].ToString().ToLower() == "list")
                                    { @Html.Raw("class='active'")           }>
                                    <a href="@Url.Action("List", "Product")">
                                        <span>Product List</span>
                                    </a>
                                </li>
                            </ul>
                        </li>
                    }
                    
                    @if (XOX.CRM.Lib.UserService.IsAuthorized("SERVICE", "VIEW") == true) {
                    <li @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "servicerequest" && ViewContext.RouteData.Values["action"].ToString().ToLower() != "index") { @Html.Raw("class='active treeview'")           } else { @Html.Raw("class='treeview'")           }>
                        <a href="#">
                            <i class="ion ion-android-note"></i> <span>Service Requests</span><i class="fa fa-angle-left pull-right"></i>
                        </a>
                        <ul class="treeview-menu">
                            <li @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "servicerequest" && ViewContext.RouteData.Values["action"].ToString().ToLower() == "accounts")
                                { @Html.Raw("class='active'")            }>
                                <a href="@Url.Action("Requests", "ServiceRequest")">
                                    <span>Service Request List</span>
                                </a>
                            </li>
                        </ul>
                    </li>
                    }
                    @*
                    <li @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "subscription" && ViewContext.RouteData.Values["action"].ToString().ToLower() != "index") { @Html.Raw("class='active treeview'")          } else { @Html.Raw("class='treeview'")          }>
                        <a href="#">
                            <i class="ion ion-flag"></i> <span>Subscription</span><i class="fa fa-angle-left pull-right"></i>
                        </a>
                        <ul class="treeview-menu">
                            <li @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "subscription" && ViewContext.RouteData.Values["action"].ToString().ToLower() == "creditlimit")
                                { @Html.Raw("class='active'")            }>
                                <a href="@Url.Action("CreditLimit", "Subscription")">
                                    <span>Credit Limit Approval</span>
                                </a>
                            </li>
                            <li @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "subscription" && ViewContext.RouteData.Values["action"].ToString().ToLower() == "payment") { @Html.Raw("class='active'")             }>
                                <a href="@Url.Action("Payment", "Subscription")">
                                    <span>MOTO Payment</span>
                                </a>
                            </li>                            
                        </ul>
                    </li>*@

                    @if (XOX.CRM.Lib.UserService.IsAuthorized("MOBILENUM", "VIEW") == true) {
                    <li @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "mobilenum" && ViewContext.RouteData.Values["action"].ToString().ToLower() != "index") { @Html.Raw("class='active treeview'")          } else { @Html.Raw("class='treeview'")          }>
                        <a href="#">
                            <i class="ion ion-pound"></i> <span>Mobile Number</span><i class="fa fa-angle-left pull-right"></i>
                        </a>
                        <ul class="treeview-menu">
                            <li @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "mobilenum" && ViewContext.RouteData.Values["action"].ToString().ToLower() == "list")
                                { @Html.Raw("class='active'")           }>
                                <a href="@Url.Action("List", "MobileNum")">
                                    <span>Mobile Number List</span>
                                </a>
                            </li>
                            <li @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "mobilenum" && ViewContext.RouteData.Values["action"].ToString().ToLower() == "batchlist") { @Html.Raw("class='active'")            }>
                                <a href="@Url.Action("BatchList", "MobileNum")">
                                    <span>Batch Number List</span>
                                </a>
                            </li>

                        </ul>
                    </li>
                    }

                    <li id="li-setting" @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "setting" && ViewContext.RouteData.Values["action"].ToString().ToLower() != "index") { @Html.Raw("class='active treeview'")          } else { @Html.Raw("class='treeview'")          }>
                        <a href="#">
                            <i class="ion ion-gear-a"></i> <span>Settings</span><i class="fa fa-angle-left pull-right"></i>
                        </a>
                        <ul class="treeview-menu" id="ul-setting">
                            @if (XOX.CRM.Lib.UserService.IsAuthorized("GROUP", "VIEW") == true) {
                            <li @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "setting" && ViewContext.RouteData.Values["action"].ToString().ToLower() == "usergrouping")
                                { @Html.Raw("class='active'") }>
                                <a href="@Url.Action("UserGrouping", "Setting")">
                                    <span>User Grouping</span>
                                </a>
                            </li>
                            }
                            @if (XOX.CRM.Lib.UserService.IsAuthorized("USERACCESS", "VIEW") == true) { 
                            <li @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "setting" && ViewContext.RouteData.Values["action"].ToString().ToLower() == "accesscontrol") { @Html.Raw("class='active'")  }>
                                <a href="@Url.Action("AccessControl", "Setting")">
                                    <span>Access Control</span>
                                </a>
                            </li>
                            }
                            @if (XOX.CRM.Lib.UserService.IsAuthorized("USER", "VIEW") == true) { 
                            <li @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "setting" && ViewContext.RouteData.Values["action"].ToString().ToLower() == "usermaster") { @Html.Raw("class='active'")  }>
                                <a href="@Url.Action("UserMaster", "Setting")">
                                    <span>User Master</span>
                                </a> 
                            </li>
                            }
                            @if (XOX.CRM.Lib.UserService.IsAuthorized("MODULE", "VIEW") == true) { 
                            <li @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "setting" && ViewContext.RouteData.Values["action"].ToString().ToLower() == "modulemaster") { @Html.Raw("class='active'")  }>
                                <a href="@Url.Action("ModuleMaster", "Setting")">
                                    <span>Module Master</span>
                                </a>
                            </li>
                            }
                            @if (XOX.CRM.Lib.UserService.IsAuthorized("LOOKUP", "VIEW") == true) {
                            <li @if (ViewContext.RouteData.Values["controller"].ToString().ToLower() == "setting" && ViewContext.RouteData.Values["action"].ToString().ToLower() == "lookupmaster") { @Html.Raw("class='active'")  }>
                                <a href="@Url.Action("LookupMaster", "Setting")">
                                    <span>Lookup Master</span>
                                </a>
                            </li>
                            }
                        </ul>
                    </li>

                </ul>
            </section>

            <!-- /.sidebar -->
        </aside>

        <div class="content-wrapper">
            <!-- Content Header (Page header) -->
            <section class="content-header">
                <h1>
                    @RenderSection("Title", false)
                </h1>
                @*
                <ol class="breadcrumb">
                    <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
                    <li><a href="#">Examples</a></li>
                    <li class="active">Blank page</li>
                </ol>*@
            </section>
            <!-- Main content -->
            <section class="content Padding-off">
                @RenderBody()
            </section><!-- /.content -->
        </div><!-- /.content-wrapper -->

    </div>

    <div id="main-footer">
        <div class="pull-right hidden-xs">
            <b>Version</b> 1.0
        </div>
    </div>
</body>
</html>

<script type="text/javascript">
    $('.img-responsive-flex').each(function (i, obj) {
        if ($(obj).height() < $(obj).width()) {
            $(obj).addClass("img-responsive-flex-landscape");
        }
        else {
            $(obj).addClass("img-responsive-flex-portrait");
        }
    });
</script>
